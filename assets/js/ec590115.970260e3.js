"use strict";(self.webpackChunklivio_dump_page=self.webpackChunklivio_dump_page||[]).push([[6265],{3905:function(t,e,a){a.d(e,{Zo:function(){return s},kt:function(){return f}});var n=a(7294);function o(t,e,a){return e in t?Object.defineProperty(t,e,{value:a,enumerable:!0,configurable:!0,writable:!0}):t[e]=a,t}function r(t,e){var a=Object.keys(t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(t);e&&(n=n.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),a.push.apply(a,n)}return a}function i(t){for(var e=1;e<arguments.length;e++){var a=null!=arguments[e]?arguments[e]:{};e%2?r(Object(a),!0).forEach((function(e){o(t,e,a[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(a)):r(Object(a)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(a,e))}))}return t}function l(t,e){if(null==t)return{};var a,n,o=function(t,e){if(null==t)return{};var a,n,o={},r=Object.keys(t);for(n=0;n<r.length;n++)a=r[n],e.indexOf(a)>=0||(o[a]=t[a]);return o}(t,e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);for(n=0;n<r.length;n++)a=r[n],e.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(t,a)&&(o[a]=t[a])}return o}var u=n.createContext({}),c=function(t){var e=n.useContext(u),a=e;return t&&(a="function"==typeof t?t(e):i(i({},e),t)),a},s=function(t){var e=c(t.components);return n.createElement(u.Provider,{value:e},t.children)},p={inlineCode:"code",wrapper:function(t){var e=t.children;return n.createElement(n.Fragment,{},e)}},m=n.forwardRef((function(t,e){var a=t.components,o=t.mdxType,r=t.originalType,u=t.parentName,s=l(t,["components","mdxType","originalType","parentName"]),m=c(a),f=o,b=m["".concat(u,".").concat(f)]||m[f]||p[f]||r;return a?n.createElement(b,i(i({ref:e},s),{},{components:a})):n.createElement(b,i({ref:e},s))}));function f(t,e){var a=arguments,o=e&&e.mdxType;if("string"==typeof t||o){var r=a.length,i=new Array(r);i[0]=m;var l={};for(var u in e)hasOwnProperty.call(e,u)&&(l[u]=e[u]);l.originalType=t,l.mdxType="string"==typeof t?t:o,i[1]=l;for(var c=2;c<r;c++)i[c]=a[c];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}m.displayName="MDXCreateElement"},800:function(t,e,a){a.r(e),a.d(e,{assets:function(){return s},contentTitle:function(){return u},default:function(){return f},frontMatter:function(){return l},metadata:function(){return c},toc:function(){return p}});var n=a(7462),o=a(3366),r=(a(7294),a(3905)),i=["components"],l={slug:"full-stack-it-automation-part-7-demo-awx",title:"Full-Stack Automation Part 7 - Demo - AWX",authors:["livio"],tags:["automation","awx","ansible","gitlab","network automation","gitlab-ci","CI/CD","gitops"]},u=void 0,c={permalink:"/full-stack-it-automation-part-7-demo-awx",editUrl:"https://github.com/liviozanol/liviozanol.github.io/blog/2022-01-10-automation-7/index.md",source:"@site/blog/2022-01-10-automation-7/index.md",title:"Full-Stack Automation Part 7 - Demo - AWX",description:"Creating Playbooks and complements",date:"2022-01-10T00:00:00.000Z",formattedDate:"January 10, 2022",tags:[{label:"automation",permalink:"/tags/automation"},{label:"awx",permalink:"/tags/awx"},{label:"ansible",permalink:"/tags/ansible"},{label:"gitlab",permalink:"/tags/gitlab"},{label:"network automation",permalink:"/tags/network-automation"},{label:"gitlab-ci",permalink:"/tags/gitlab-ci"},{label:"CI/CD",permalink:"/tags/ci-cd"},{label:"gitops",permalink:"/tags/gitops"}],readingTime:10.85,truncated:!0,authors:[{name:"L\xedvio Zanol Puppim",title:"Me",url:"https://github.com/liviozanol",imageURL:"https://github.com/liviozanol.png",key:"livio"}],frontMatter:{slug:"full-stack-it-automation-part-7-demo-awx",title:"Full-Stack Automation Part 7 - Demo - AWX",authors:["livio"],tags:["automation","awx","ansible","gitlab","network automation","gitlab-ci","CI/CD","gitops"]},prevItem:{title:"Full-Stack Automation Part 8 - Demo - Runner",permalink:"/full-stack-it-automation-part-8-demo-gitlab-runner"},nextItem:{title:"Full-Stack Automation Part 6 - Demo -Scenario",permalink:"/full-stack-it-automation-part-6-demo-scenario"}},s={authorsImageUrls:[void 0]},p=[{value:"Creating Playbooks and complements",id:"creating-playbooks-and-complements",level:2}],m={toc:p};function f(t){var e=t.components,a=(0,o.Z)(t,i);return(0,r.kt)("wrapper",(0,n.Z)({},m,a,{components:e,mdxType:"MDXLayout"}),(0,r.kt)("h2",{id:"creating-playbooks-and-complements"},"Creating Playbooks and complements"),(0,r.kt)("p",null,"In the previous post we have defined our structured data and created sample projects on gitlab. Now that our data structure is defined we can start to build our playbooks and templates. In this section we'll build our inventory, templates, workflow and playbook."),(0,r.kt)("p",null,"All files generated on this section (and on previous) are on full-stack automation github repo (",(0,r.kt)("a",{parentName:"p",href:"https://github.com/liviozanol/full-stack-automation"},"https://github.com/liviozanol/full-stack-automation"),"), so you don't need to create it yourself again."),(0,r.kt)("p",null,"Ansible/AWX are only the executor of automation tasks and they are never accessed by end-users. So, we don't need to have separation/segregation on a client basis on AWX and you don't need to carry about this. More information about AWX and its role on this architecture can be found ",(0,r.kt)("a",{parentName:"p",href:"full-stack-it-automation-part-4-awx"},"here")),(0,r.kt)("p",null,"Everytime our gitlab repository is changed, gitlab-ci will get the contents of our wan_site_cfg.json file and send it to AWX as a variable, calling a job/playbook/template or a workflow that will implement the changes on our equipments."),(0,r.kt)("p",null,"After configuring AWX, you should be able to start jobs on it to implement changes on remote WAN sites."),(0,r.kt)("p",null,"Every file for AWX config to our demo can be found ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/liviozanol/full-stack_automation/tree/master/demo/awx"},"here")))}f.isMDXComponent=!0}}]);