"use strict";(self.webpackChunklivio_dump_page=self.webpackChunklivio_dump_page||[]).push([[208],{3905:function(t,e,n){n.d(e,{Zo:function(){return p},kt:function(){return b}});var a=n(7294);function i(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function r(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(t);e&&(a=a.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,a)}return n}function o(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?r(Object(n),!0).forEach((function(e){i(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function l(t,e){if(null==t)return{};var n,a,i=function(t,e){if(null==t)return{};var n,a,i={},r=Object.keys(t);for(a=0;a<r.length;a++)n=r[a],e.indexOf(n)>=0||(i[n]=t[n]);return i}(t,e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);for(a=0;a<r.length;a++)n=r[a],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(i[n]=t[n])}return i}var u=a.createContext({}),c=function(t){var e=a.useContext(u),n=e;return t&&(n="function"==typeof t?t(e):o(o({},e),t)),n},p=function(t){var e=c(t.components);return a.createElement(u.Provider,{value:e},t.children)},s={inlineCode:"code",wrapper:function(t){var e=t.children;return a.createElement(a.Fragment,{},e)}},m=a.forwardRef((function(t,e){var n=t.components,i=t.mdxType,r=t.originalType,u=t.parentName,p=l(t,["components","mdxType","originalType","parentName"]),m=c(n),b=i,g=m["".concat(u,".").concat(b)]||m[b]||s[b]||r;return n?a.createElement(g,o(o({ref:e},p),{},{components:n})):a.createElement(g,o({ref:e},p))}));function b(t,e){var n=arguments,i=e&&e.mdxType;if("string"==typeof t||i){var r=n.length,o=new Array(r);o[0]=m;var l={};for(var u in e)hasOwnProperty.call(e,u)&&(l[u]=e[u]);l.originalType=t,l.mdxType="string"==typeof t?t:i,o[1]=l;for(var c=2;c<r;c++)o[c]=n[c];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},3947:function(t,e,n){n.r(e),n.d(e,{assets:function(){return p},contentTitle:function(){return u},default:function(){return b},frontMatter:function(){return l},metadata:function(){return c},toc:function(){return s}});var a=n(7462),i=n(3366),r=(n(7294),n(3905)),o=["components"],l={slug:"full-stack-it-automation-part-5-gitlabci",title:"Full-Stack Automation Part 5 - Gitlab CI",authors:["livio"],tags:["automation","awx","ansible","gitlab","network automation","gitlab-ci","CI/CD","gitops"]},u=void 0,c={permalink:"/full-stack-it-automation-part-5-gitlabci",editUrl:"https://github.com/liviozanol/liviozanol.github.io/blog/2021-12-09-automation-5/index.md",source:"@site/blog/2021-12-09-automation-5/index.md",title:"Full-Stack Automation Part 5 - Gitlab CI",description:"Gitlab-CI",date:"2021-12-09T00:00:00.000Z",formattedDate:"December 9, 2021",tags:[{label:"automation",permalink:"/tags/automation"},{label:"awx",permalink:"/tags/awx"},{label:"ansible",permalink:"/tags/ansible"},{label:"gitlab",permalink:"/tags/gitlab"},{label:"network automation",permalink:"/tags/network-automation"},{label:"gitlab-ci",permalink:"/tags/gitlab-ci"},{label:"CI/CD",permalink:"/tags/ci-cd"},{label:"gitops",permalink:"/tags/gitops"}],readingTime:2.735,truncated:!0,authors:[{name:"L\xedvio Zanol Puppim",title:"Me",url:"https://github.com/liviozanol",imageURL:"https://github.com/liviozanol.png",key:"livio"}],frontMatter:{slug:"full-stack-it-automation-part-5-gitlabci",title:"Full-Stack Automation Part 5 - Gitlab CI",authors:["livio"],tags:["automation","awx","ansible","gitlab","network automation","gitlab-ci","CI/CD","gitops"]},prevItem:{title:"Full-Stack Automation Part 6 - Demo -Scenario",permalink:"/full-stack-it-automation-part-6-demo-scenario"},nextItem:{title:"Full-Stack Automation Part 4 - AWX",permalink:"/full-stack-it-automation-part-4-awx"}},p={authorsImageUrls:[void 0]},s=[{value:"Gitlab-CI",id:"gitlab-ci",level:2}],m={toc:s};function b(t){var e=t.components,n=(0,i.Z)(t,o);return(0,r.kt)("wrapper",(0,a.Z)({},m,n,{components:e,mdxType:"MDXLayout"}),(0,r.kt)("h2",{id:"gitlab-ci"},"Gitlab-CI"),(0,r.kt)("p",null,"Gitlab-CI, AKA Gitlab runner, is a Continuous Integration and Continuous Delivery/Deployment solution built by gitlab. It fully integrates with gitlab listening for changes on repositories and executing pipelines to automate build, test, approve and deploy applications."),(0,r.kt)("p",null,"It can run on a container and, after a change is triggered, uses docker images to execute steps configured on the pipeline."),(0,r.kt)("p",null,"More about Gitlab can be found on its site: ",(0,r.kt)("a",{parentName:"p",href:"https://docs.gitlab.com/ee/ci/"},"https://docs.gitlab.com/ee/ci/")))}b.isMDXComponent=!0}}]);