---
slug: full-stack-automation
title: Full-Stack Automation
authors: [livio]
tags: [automation, awx, ansible, gitlab, network automation]
---

###TODO DEFINIÇÃO DE SERVIÇO
###TODO COLOCAR LINK PARA NOME DOS ELEMENTOS (ansible, gitlab, awx, etc.)
###TODO Colocar os detalheamentos grandes em sessões a parte (tipo o code, mas não exatamente o code.). Explicar antes dos posts essas sessões.
###Talvez separar a descrição de cada elemento para "parts" distintas do post
###Fazer TL;DR e juntar toda a implantaçaõ num script só com docker-compose e sell script, citando como staartar
###Fazer um resumão simples
###Colocar as gravuras com as comunicações.
###FAZER UM RESUMÃO BEM LEGAL DE TODAS AS PARTES
###FALAR DA PARTE QUE DÁ PARA SUBSTITUIR CADA PARTE INDEPENDENTE DA OUTRA E DAR EXMEPLOS (PYTHON EVE, ETC).
##TODO ###https://cloud-images.ubuntu.com/focal/current/




Gitlab CI




API

Any validation will be done on this layer and provide a feedback to the user with nice messages. Doing it this way allows the solution to receive only the data that needs to be set/changed by the user in strong verified way, providing a good secure point while keeping the infrasctructure itself on a completely separated segment acessed only by ansible/AWX without any point of contact by users.




Web Interface
















- CRIAR PROJETO COM SOURCE DO GIT
/api/v2/organizations/2/projects/
Create a Project for an Organization
{
  "allow_override": true,
  "credential": 0,
  "custom_virtualenv": "string",
  "description": "string",
  "local_path": "string",
  "name": "string",
  "organization": 0,
  "scm_branch": "string",
  "scm_clean": true,
  "scm_delete_on_update": true,
  "scm_refspec": "string",
  "scm_type": "string",
  "scm_update_cache_timeout": 0,
  "scm_update_on_launch": true,
  "scm_url": "string",
  "timeout": 0
}


- CRIAR INVENTARIO COM SOURCE DO GIT
/api/v2/inventories/
name: Name of this inventory. (string, required)
description: Optional description of this inventory. (string, default="")
organization: Organization containing this inventory. (id, required)
kind: Kind of inventory being represented. (choice)
"": Hosts have a direct link to this inventory. (default)
smart: Hosts for inventory generated using the host_filter property.
host_filter: Filter that will be applied to the hosts of this inventory. (string, default="")
variables: Inventory variables in JSON or YAML format. (json, default=``)
insights_credential: Credentials to be used by hosts belonging to this inventory when accessing Red Hat Insights API. (id, default=``)
{
  "host_filter": "ansible_facts__ansible_distribution__exact=\"CentOS\"",
  "kind": "smart",
  "name": "smart inventory",
  "organization": 1
}





/api/v2/users/{id}/roles/
Associate Roles with this User
Make a POST request to this resource to add or remove a role from this user. The following fields may be modified:

id: The Role ID to add to the user. (int, required)
disassociate: Provide if you want to remove the role. (any value, optional

###TODO: INITIAL INSTALL
sudo apt update && sudo apt install ca-certificates curl gnupg lsb-release jq openssl docker ansible make python3 --yes

curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg

echo \
  "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu \
  $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null

sudo apt update

sudo apt install docker-ce docker-ce-cli containerd.io --yes

sudo curl -L "https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose

sudo chmod +x /usr/local/bin/docker-compose


curl -fsSL https://bootstrap.pypa.io/get-pip.py > get-pip.py

python3 get-pip.py

sudo usermod -aG docker